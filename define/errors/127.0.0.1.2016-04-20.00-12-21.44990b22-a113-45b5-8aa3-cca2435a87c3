(dp1
S'output'
p2
S"<type 'exceptions.KeyError'> 'reference_grupo'"
p3
sS'layer'
p4
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers/particular.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\nfrom __future__ import division\nfrom nltk.corpus import wordnet as wn #Importamos el lector del corpus de wordnet\nimport random\nimport operator\n\n#########################################################################\n## La funci\xc3\xb3n inicio crea la vista inicial que tendr\xc3\xa1 el usuario si no tiene\n## ninguna lista pendiente para etiquetar, crea dos variables en apoyo a esto\n## Vista relacionada: particular/inicio.html\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: inicio\nDescripci\xc3\xb3n: Crea dos variables, una para mostrar el nombre del usuario y la otra para listar los terminos\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: default/inicio.html\n"""\n@auth.requires_login()\ndef inicio():\n    if (len(db((db.temporal.usuario_id == auth.user.id) & (db.temporal.modo == \'1\')).select()) == 0):\n        usuario_nombre = auth.user.first_name\n        termino = db().select(db.termino.id, db.termino.ter)\n        if(request.vars.en == "1"):\n            response.flash = \'Lista de definiciones terminada\'\n    else:\n        redirect(URL(\'relacion?rd=1\'))\n    return locals()\n\n#########################################################################\n## La funci\xc3\xb3n importar lee si se subi\xc3\xb3 un archivo, si es as\xc3\xad lo importa a la\n## base de datos.\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: importar\nDescripci\xc3\xb3n: Lee si hay un archivo, si es as\xc3\xad lo importa a la base de datos\nVersi\xc3\xb3n: 2.1\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: dict() - Un diccionario\nVista relacionada: default/importar.html\n"""\n@auth.requires_login()\ndef importar():\n    if request.vars.csvfile != None:\n        db.termino.insert(ter=request.vars.nombre)\n        idTermino = db(db.termino.ter == request.vars.nombre).select(db.termino.id)\n        table = db[request.vars.table]\n        file = request.vars.csvfile.file\n        table.import_from_csv_file(file)\n        db(db.definicion.termino_id==1).update(termino_id=idTermino[0][\'id\'])\n        users = db().select(db.auth_user.id)\n        db.grupo.insert(grup=\'No informativo\', termino_id=idTermino[0][\'id\'], tipo="Sistema", modo="1")\n        db.grupo.insert(grup=\'No informativo\', termino_id=idTermino[0][\'id\'], tipo="Sistema", modo="2")\n        redirect(URL(\'inicio\'))\n    else:\n        response.flash = \'Selecciona un archivo\'\n    return dict()\n\n#########################################################################\n## La funci\xc3\xb3n relacion crea la interfaz necesaria para que el etiquetador\n## pueda relacionar definiciones con grupos. Primero crea la lista si no\n## existe, posteriormente crea otras listas utiles para mostrar al etiquetador\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: relacion\nDescripci\xc3\xb3n: Crea la interfaz para la relacion\nVersi\xc3\xb3n: 2.8\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: default/relacion.html\n"""\n@auth.requires_login()\ndef relacion():\n    muestra = list()\n    if(len(db((db.temporal.usuario_id == auth.user.id) & (db.temporal.modo == \'1\')).select()) == 0):\n        muestra = getMuestra(db(db.definicion.termino_id==request.vars.termino).select())\n        response.flash = \'Se ha creado una lista aleatoria\'\n    else:\n        muestra = db((db.temporal.usuario_id == auth.user.id) & (db.temporal.modo == \'1\')).select()\n        if(request.vars.rd == "1"):\n            response.flash = \'Continua desde la \xc3\xbaltima sesi\xc3\xb3n\'\n    definicion = db(db.definicion.id==muestra[0][\'definicion_id\']).select()[0]\n    termino = db(db.termino.id==definicion[\'termino_id\']).select()[0]\n    historial = getHistorialKeywords(db((db.relacion.definicion_id==definicion[\'id\']) & (db.relacion.modo == "1")).select())\n    grupos = db((db.grupo.termino_id == termino[\'id\']) & (db.grupo.modo == \'1\')).select()\n    if(request.vars.error == \'0\'):\n        response.flash = \'Favor de llenar los campos\'\n    elif request.vars.error == \'1\':\n        response.flash = \'Las palabras clave no se encuentran en la definici\xc3\xb3n\'\n    total_usuarios = len(db(db.auth_user.id > 0).select())\n    porcentaje = getPorcentajes(db((db.relacion.modo == "1")).select())\n    return locals()\n\n#########################################################################\n## La funci\xc3\xb3n getMuestra crea una lista aleatoria y devuelve la consulta de\n## la misma\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: getMuestra\nDescripci\xc3\xb3n: Crea la lista aleatoria\nVersi\xc3\xb3n: 1.1\nAutor: Antonio Nu\xc3\xb1ez\nParametros: lista_definiciones - Las definiciones del t\xc3\xa9rmino seleccionado\nRetorno: La consulta de la muestra aleatoria que se acaba de crear\n"""    \ndef getMuestra(lista_definiciones):\n    i = 0\n    muestra = list()\n    max = 10\n    if(len(lista_definiciones) < 10):\n        max = len(lista_definiciones)\n    while (i < max):\n        definicion = int(random.uniform(0, len(lista_definiciones)))\n        if noEnLista(lista_definiciones[definicion][\'id\'], muestra):\n            muestra.append(lista_definiciones[definicion])\n            i = i + 1\n    registraLista(muestra)\n    return db((db.temporal.usuario_id == auth.user.id) & (db.temporal.modo == \'1\')).select()\n\n#########################################################################\n## La funci\xc3\xb3n noEnLista coprueba que una definici\xc3\xb3n no se repita en la lista\n## aleatoria\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: noEnLista\nDescripci\xc3\xb3n: Valida que las definiciones no se repitan\nVersi\xc3\xb3n: 1.1\nAutor: Antonio Nu\xc3\xb1ez\nParametros: idDefinicion - La definici\xc3\xb3n que se quiere validar | muestra - La lista de definiciones\nRetorno: flag - Si se repite\n"""   \ndef noEnLista(idDefinicion, muestra):\n    flag = True\n    for definicion in muestra:\n        if definicion[\'id\'] == idDefinicion:\n            flag = False\n    return flag\n\n#########################################################################\n## La funci\xc3\xb3n registraLista crea el registro temporal en la base de datos\n## de la lista aleatoria que se creo\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: registraLista\nDescripci\xc3\xb3n: Registra la lista aleatoria en la base de datos\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nParametros: muestra - La lista de definiciones\n"""   \ndef registraLista(muestra):\n    for definicion in muestra:\n        db.temporal.insert(usuario_id=auth.user.id, definicion_id=definicion[\'id\'], modo="1")\n\n#########################################################################\n## La funci\xc3\xb3n getHistorialKeywords busca las palabras que se han utilizado\n## para un grupo y las cuenta, regresa un diccionario con las palabras clave\n## y la cantidad de veces que se repitieron, esto se ordena de mayor a menor\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: getHistorialKeywords\nDescripci\xc3\xb3n: Regresa un diccionario con la cantidad de veces que una palabra clave se repitio\nVersi\xc3\xb3n: 2.0\nAutor: Antonio Nu\xc3\xb1ez\nParametros: lista - La lista de registros\nRetorno: ordena - Diccionario ordenado de las palabras clave y su cantidad de usos\n"""   \ndef getHistorialKeywords(lista):\n    frase_clave = []\n    for registro in lista:\n        aux = registro[\'keywords\'].split(\',\')\n        for frase in aux:\n            if frase[0] == \' \':\n                frase = frase[1:]\n            frase_clave.append(frase)\n    conteo_frase = {}\n    for frase in frase_clave:\n        if frase in conteo_frase:\n            conteo_frase[frase] += 1\n        else:\n            conteo_frase[frase] = 1\n    ordenado = sorted(conteo_frase.items(), key=operator.itemgetter(1), reverse=True)\n    return ordenado\n    \n#########################################################################\n## La funci\xc3\xb3n getPorcentajes suma la cantidad de veces que un grupo ha sido\n## utilizado por un usuario y lo regresa.\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: getPorcentajes\nDescripci\xc3\xb3n: Regresa un diccionario con la cantidad de veces que un grupo ha sido utilizado\nVersi\xc3\xb3n: 2.0\nAutor: Antonio Nu\xc3\xb1ez\nParametros: grupos - La lista de registros\nRetorno: porcentaje - Diccionario con el numero de usuarios que han usado un grupo\n"""   \ndef getPorcentajes(grupos):\n    porcentaje = dict()\n    for grupo in grupos:\n        if grupo[\'grupo_id\'] in porcentaje and grupo[\'usuario\'] not in porcentaje:\n            porcentaje[grupo[\'grupo_id\']] += 1\n        else:\n            porcentaje[grupo[\'grupo_id\']] = 1\n            porcentaje["u" + str(grupo[\'usuario\'])] = 1\n    return porcentaje\n\n#########################################################################\n## La funci\xc3\xb3n vistaWordNet crea la cadena de grupos que son sugerencia de wordnet\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: vistaWordNet\nDescripci\xc3\xb3n: Crea la cadena de grupos sugerencia de wordnet\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: particular/vistaWordNet\n"""   \ndef vistaWordNet():\n    wordnet = crear_cadena(request.vars.texto, True)\n    return locals()\n\n#########################################################################\n## La funci\xc3\xb3n crear_cadena lee el t\xc3\xa9rmino y una bandera para consultar wordnet\n## y agregar a la cadena los grupos que este devuelve. Tiene opci\xc3\xb3n de recursividad\n## hasta un nivel m\xc3\xa1s\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: crear_cadena\nDescripci\xc3\xb3n: Regresa los grupos sugeridos en forma de cadena con formato html\nVersi\xc3\xb3n: 1.1\nAutor: Antonio Nu\xc3\xb1ez\nParametros: termino - Lo que buscaremos en wordnet | flag - si buscar\xc3\xa1 un nivel m\xc3\xa1s | cadenas - el contenido que ya existe cuando es recursiva\nRetorno: cadenas - los grupos en formato html\n"""\ndef crear_cadena(termino, flag, cadenas=list()):\n    lista = wordnet_termino(termino)\n    if(len(db((db.grupo.grup == str(termino)) & (db.grupo.modo == "1")).select()) == 0):\n        cadenas.append(\'<input type=\\\'checkbox\\\' name=\\\'grupo\\\' value=\\\'\'+ str(termino) + \'\\\' style=\\\'display:inline;\\\' />@\' + str(termino)) #Cada t\xc3\xa9rmino\n        for synset in lista:\n            if not busca_existencia(str(synset.definition()), cadenas): #Si el t\xc3\xa9rmino no existe en la cadena\n                lemmas = [str(lemma.name()) for lemma in synset.lemmas()]\n                cadenas.append(\'<br><input type=\\\'checkbox\\\' name=\\\'grupo\\\' value=\\\'test\\\' style=\\\'display:inline;\\\' onclick=\\\'nuevoValor(this)\\\' /><strong>Lemmas</strong>: \' + str(lemmas) + \', <br><strong>Definition:</strong> (\' + synset.definition() + \'),<br> <strong>Examples: </strong> \' + str(synset.examples()).replace("u\'", "\'").replace("[]", "No available"))\n        cadenas.append(\'--------------------------------------------------\')\n    if flag: #Avanza un nivel m\xc3\xa1s de b\xc3\xbasqueda\n        for synset in lista:\n            lemmas = [str(lemma.name()) for lemma in synset.lemmas()]\n            for aux in lemmas: #Por cada lemma\n                if busca_existencia(str(aux), cadenas, \'@\'):\n                    print \'Ya existe\'\n                else:\n                    cadenas = crear_cadena(aux, False, cadenas)\n    return cadenas\n\n#########################################################################\n## La funci\xc3\xb3n wordnet_termino devuelve los synsets de un termino\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: wordnet_termino\nDescripci\xc3\xb3n: Regresa los synsets de un termino\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nParametros: termino - Lo que buscaremos en wordnet\nRetorno: Los synsets\n"""      \ndef wordnet_termino(termino):\n    return list(wn.synsets(str(termino)))\n\n#########################################################################\n## La funci\xc3\xb3n busca_existencia busca si alg\xc3\xban synset ya est\xc3\xa1 en la cadena\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: busca_existencia\nDescripci\xc3\xb3n: Busca si el synset ya existe\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nParametros: cadena - la cadena a buscar | cadenas - Donde buscaremos la cadena | identificador - alg\xc3\xban adorno que hayamos agregado\nRetorno: flag - Si existe en la cadena\n"""    \ndef busca_existencia(cadena, cadenas, identificador=\'\'):\n    flag = False\n    if identificador != \'\':\n        cadena = str(identificador) + str(cadena)\n    for aux in cadenas:\n        if cadena.lower() in aux.lower():\n            flag = True\n    return flag\n\n#########################################################################\n## La funci\xc3\xb3n crearGrupo se encarga de crear el grupo y de generar una string con\n## los grupos en la base de dados con el fin de hacer validaciones\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: crearGrupo\nDescripci\xc3\xb3n: Crea lo grupos personalizados\nVersi\xc3\xb3n: 1.6\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: particular/crearGrupo\n"""   \n@auth.requires_login()\ndef crearGrupo():\n    user = auth.user.id\n    termino = request.vars.termino\n    grupos = db((db.grupo.termino_id == termino) & (db.grupo.modo == "1")).select()\n    cadena_grupos = ""\n    for grupo in grupos:\n        cadena_grupos += grupo[\'grup\'] + " "\n    if request.vars.nombre == \'0\':\n        response.flash = \'Ingresa un grupo\'\n    elif request.vars.nombre != \'\':\n        db.grupo.insert(grup = request.vars.nombre, termino_id = termino, tipo=\'Custom\', modo=\'1\')\n    return locals()\n    \n#########################################################################\n## La funci\xc3\xb3n DBGroup se encarga de crear los grupos sugeridos\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: DBGroup\nDescripci\xc3\xb3n: Crea lo grupos sugeridos\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: particular/vistaWordNet\n"""\ndef DBGroup():\n    if(request.vars.grupo != None):\n        if  isinstance(request.vars.grupo, list):\n            for grupo in request.vars.grupo:\n                if \'-csm\' in grupo:\n                    aux = len(db(db.claves.id > 0).select())\n                    db.grupo.insert(grup = "PGL-" + str(aux), termino_id = request.vars.termino, tipo=\'wordnet\', modo="1")\n                    id_csm = db(db.grupo.grup == "PGL-" + str(aux)).select()[0][\'id\']\n                    db.claves.insert(grupo_id=id_csm, usuario_id = auth.user.id, nombre=grupo)\n                else:\n                    db.grupo.insert(grup = grupo, termino_id = request.vars.termino, tipo=\'wordnet\', modo="1")\n        else:\n            if \'-csm\' in request.vars.grupo:\n                    aux = len(db(db.claves.id > 0).select())\n                    db.grupo.insert(grup = "PGL-" + str(aux), termino_id = request.vars.termino, tipo=\'wordnet\', modo="1")\n                    id_csm = db(db.grupo.grup == "PGL-" + str(aux)).selet()[0][\'id\']\n                    db.claves.insert(grupo_id=id_csm, usuario_id = auth.user.id, nombre=request.vars.grupo)\n            else:\n                db.grupo.insert(grup = request.vars.grupo, termino_id = request.vars.termino, tipo=\'wordnet\', modo="1")\n    validaOtro = False\n    if request.vars.otro == \'-1\':\n        validaOtro = True\n    else:\n        redirect(URL("crearGrupo?termino=" + request.vars.otro + "&nombre=0"))\n    return locals()\n\n#########################################################################\n## La funci\xc3\xb3n getHistorialGrupos se encarga de crear el historial de definiciones\n## usadas para un grupo o conjunto de grupos, lo mandamos a llamar con ajax\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: getHistorialGrupos\nDescripci\xc3\xb3n: Crea el historial de definiciones por grupo\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: respuestaHtml - la respuesta que ajax pondra en la vista\nVista relacionada: particular/relacion\n"""\ndef getHistorialGrupos():\n    respuestaHtml = ""\n    user = request.vars.c\n    if request.vars.grupos != None:\n        if  isinstance(request.vars.grupos, list):\n            for grupo in request.vars.grupos:\n                historial = db((db.relacion.grupo_id == grupo) & (db.relacion.usuario == user) & (db.relacion.modo == "1")).select()\n                grupoNombre = db((db.grupo.id == grupo) & (db.grupo.modo == "1")).select()[0][\'grup\']\n                respuestaHtml += "<p><strong>Grupo:</strong> " + grupoNombre + "<br>"\n                contador = 10\n                aux = len(historial) - 1\n                if (len(historial) < 10):\n                    contador = len(historial)\n                while(contador > 0):\n                    respuestaHtml += "<strong>Definci\xc3\xb3n: </strong>" + db(db.definicion.id == historial[aux][\'definicion_id\']).select()[0][\'defi\'] + "<br>"\n                    contador -= 1\n                    aux -= 1\n                respuestaHtml += "</p>"\n        else:\n            historial = db((db.relacion.grupo_id == request.vars.grupos) & (db.relacion.usuario == user) & (db.relacion.modo == "1")).select()\n            grupoNombre = db((db.grupo.id == request.vars.grupos) & (db.grupo.modo == "1")).select()[0][\'grup\']\n            respuestaHtml += "<p><strong>Grupo:</strong> " + grupoNombre + "<br>"\n            contador = 10\n            aux = len(historial) - 1\n            if (len(historial) < 10):\n                contador = len(historial)\n            while(contador > 0):\n                respuestaHtml += "<strong>Definci\xc3\xb3n: </strong>" + db(db.definicion.id == historial[aux][\'definicion_id\']).select()[0][\'defi\'] + "<br>"\n                contador -= 1\n                aux -= 1\n            respuestaHtml += "</p>"\n    else:\n        respuestaHtml = "Selecciona un grupo"\n    return respuestaHtml\n\n#########################################################################\n## La funci\xc3\xb3n unir toma los datos mandados desde relacion y los introduce\n## en la base de datos\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: unir\nDescripci\xc3\xb3n: Crea la relacion en la base de datos\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: particular/relacion\n"""\n@auth.requires_login()\ndef unir():\n    if(request.vars.keyword == \'\' or request.vars.grupo == None): #Validaci\xc3\xb3n de campos vacios\n        redirect(URL(\'relacion?error=0\'))\n    else:\n        if  isinstance(request.vars.grupo, list):\n            request.vars.grado = [x for x in request.vars.grado if x != \'\']\n            i = 0\n            while i < len(request.vars.grupo):\n                db.relacion.insert(keywords=request.vars.keyword, grado=request.vars.grado[i], grupo_id=request.vars.grupo[i], definicion_id=request.vars.definicion, usuario=auth.user.id, modo="1")\n                i = i + 1\n        else:\n            request.vars.grado = [x for x in request.vars.grado if x != \'\']\n            db.relacion.insert(keywords=request.vars.keyword, grado=request.vars.grado[0], grupo_id=request.vars.grupo, definicion_id=request.vars.definicion, usuario=auth.user.id, modo="1")\n        db((db.temporal.usuario_id==auth.user.id) & (db.temporal.definicion_id == request.vars.definicion) & (db.temporal.modo == "1")).delete()\n        if(len(db((db.temporal.usuario_id==auth.user.id) & (db.temporal.modo == "1")).select()) == 0):\n            redirect(URL(\'inicio?en=1\'))\n        else:\n            redirect(URL(\'relacion\'))\n    return locals()\n\ndef vistaTodos():\n    grupos = db((db.grupo.id > 0) & (db.grupo.grup != "No informativo") & (db.grupo.modo == 1)).select()\n    cadena = list()\n    for grupo in grupos:\n        termino_id = grupo[\'termino_id\']\n        termino = db(db.termino.id == termino_id).select()[0][\'ter\']\n        cadena.append(\'<input type=\\\'checkbox\\\' name=\\\'grupo\\\' value=\\\'\'+ str(termino_id) + str(termino) + \'\\\' />\' + str(termino))\n    textos = ""\n    if isinstance(request.vars.texto, list):\n        for texto in request.vars.ter:\n            textos += "texto=" + str(texto) + "&"\n    else:\n        textos = "texto=" + str(request.vars.ter) + "&"\n    textos += "c=0"\n    return locals()\n\ndef DBTodos():\n    if(request.vars.grupo != None):\n        if  isinstance(request.vars.grupo, list):\n            for grupo in request.vars.grupo:\n                numeros = sum(c.isdigit() for c in grupo)\n                db.grupo.insert(grup = grupo[numeros:], termino_id = grupo[numeros-1], tipo=\'mixto\', modo="1")\n        else:\n            numeros = sum(c.isdigit() for c in request.vars.grupo)\n            db.grupo.insert(grup = request.vars.grupo[numeros:], termino_id = request.vars.grupo[numeros-1], tipo=\'mixto\', modo="1")\n    validaOtro = False\n    if request.vars.otro == \'-1\':\n        validaOtro = True\n    else:\n        redirect(URL("vistaWordNet?id=" + request.vars.id + "&" + request.vars.texto))\n    return locals()\n\nresponse._vars=response._caller(DBGroup)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.KeyError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.KeyError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.KeyError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.KeyError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.KeyError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.KeyError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.KeyError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.KeyError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.KeyError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.KeyError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.KeyError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.KeyError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.KeyError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.KeyError object>"
p41
sS'args'
p42
S"('reference_grupo',)"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.KeyError object>'
p47
sS'__doc__'
p48
S"'Mapping key not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.KeyError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'reference_grupo'"
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S's=b\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>define_git</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>particular</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-248bdd7d-2da4-430e-a6d5-43a6d61f97db<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_define_git</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a4fa414f-47e1-4ad7-9f3a-15332515af9a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-cc9a5058-0872-4f5b-a126-9402aac90a9f<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>es-MX,es-ES;q=0.8,en-US;q=0.7,es-AR;q=0.5,es;q=0.3,en;q=0.2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-cc9a5058-0872-4f5b-a126-9402aac90a9f; session_id_admin=127.0.0.1-248bdd7d-2da4-430e-a6d5-43a6d61f97db; session_id_define_git=127.0.0.1-a4fa414f-47e1-4ad7-9f3a-15332515af9a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/define_git/particular/vistaWordNet?id=7&amp;texto=Animal&amp;c=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 6.1; rv:43.0) Gecko/20100101 Firefox/43.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/define_git/particular/DBGroup</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div>grupo=organism-csm&amp;grupo=passion-csm&amp;termino=7&amp;otro=-1&amp;auxiliar=True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>56654</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>Antonio-PC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\welcome\\\\&#x27;, &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\define_git\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x284c238: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::c19a:2dcb:509a:1544%16&#x27;, &#x27;fe80::700f:f26a:3942:deab%17&#x27;, &#x27;192.168.50.1&#x27;, &#x27;192.168.0.101&#x27;, &#x27;fe80::d8a1:5c7c:68b4:6917%14&#x27;, &#x27;192.168.80.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Antonio-PC&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>es-MX,es-ES;q=0.8,en-US;q=0.7,es-AR;q=0.5,es;q=0.3,en;q=0.2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-cc9a5058-0872-4f5b-a126-9402aac90a9f; session_id_admin=127.0.0.1-248bdd7d-2da4-430e-a6d5-43a6d61f97db; session_id_define_git=127.0.0.1-a4fa414f-47e1-4ad7-9f3a-15332515af9a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/define_git/particular/vistaWordNet?id=7&amp;texto=Animal&amp;c=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 6.1; rv:43.0) Gecko/20100101 Firefox/43.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::c19a:2dcb:509a:1544%16</div></td></tr><tr><td><div>Antonio-PC</div></td></tr><tr><td><div>fe80::700f:f26a:3942:deab%17</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>192.168.50.1</div></td></tr><tr><td><div>192.168.0.101</div></td></tr><tr><td><div>192.168.80.1</div></td></tr><tr><td><div>fe80::d8a1:5c7c:68b4:6917%14</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/define_git/particular/DBGroup</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div>grupo=organism-csm&amp;grupo=passion-csm&amp;termino=7&amp;otro=-1&amp;auxiliar=True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>56654</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/define_git/particular/DBGroup?grupo=organism-csm&amp;grupo=passion-csm&amp;termino=7&amp;otro=-1&amp;auxiliar=True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>Antonio-PC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.11.2-stable+timestamp.2015.05.30.11.29.46</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x013FD0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x01E86FB8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x0C14D7B0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x013FD0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x01E86FB8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x0C14D7B0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>DBGroup</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\welcome\\\\&#x27;, &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\define_git\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x284c238: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::c19a:2dcb:509a:1544%16&#x27;, &#x27;fe80::700f:f26a:3942:deab%17&#x27;, &#x27;192.168.50.1&#x27;, &#x27;192.168.0.101&#x27;, &#x27;fe80::d8a1:5c7c:68b4:6917%14&#x27;, &#x27;192.168.80.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Antonio-PC&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::c19a:2dcb:509a:1544%16</div></td></tr><tr><td><div>Antonio-PC</div></td></tr><tr><td><div>fe80::700f:f26a:3942:deab%17</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>192.168.50.1</div></td></tr><tr><td><div>192.168.0.101</div></td></tr><tr><td><div>192.168.80.1</div></td></tr><tr><td><div>fe80::d8a1:5c7c:68b4:6917%14</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.11.2-stable+timestamp.2015.05.30.11.29.46</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 20, 0, 12, 21, 702000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/define_git/particular/DBGroup</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 20, 5, 12, 21, 702000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x0D8F8950&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0B985020, file "C:\\User...ns\\define_git\\controllers/particular.py", line 3>'
p69
ssS'lnum'
p70
I227
sS'lines'
p71
(dp72
I224
S'            ccode = code'
p73
sI225
S'        else:'
p74
sI226
S'            ccode = compile2(code, layer)'
p75
sI227
S'        exec ccode in environment'
p76
sI228
S'    except HTTP:'
p77
sI229
S'        raise'
p78
sI230
S'    except RestrictedError:'
p79
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p80
sI222
S'    try:'
p81
sI223
S'        if isinstance(code, types.CodeType):'
p82
ssS'call'
p83
S"(code='# -*- coding: utf-8 -*-\\n\\nfrom __future__ import ...cals()\\n\\nresponse._vars=response._caller(DBGroup)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer=r'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers/particular.py')"
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers\\particular.py'
p88
sg64
(dp89
sg70
I464
sg71
(dp90
I453
S'                db.grupo.insert(grup = grupo[numeros:], termino_id = grupo[numeros-1], tipo=\'mixto\', modo="1")'
p91
sI454
S'        else:'
p92
sI455
S'            numeros = sum(c.isdigit() for c in request.vars.grupo)'
p93
sI456
S'            db.grupo.insert(grup = request.vars.grupo[numeros:], termino_id = request.vars.grupo[numeros-1], tipo=\'mixto\', modo="1")'
p94
sI457
S'    validaOtro = False'
p95
sI458
S"    if request.vars.otro == '-1':"
p96
sI459
S'        validaOtro = True'
p97
sI460
S'    else:'
p98
sI461
S'        redirect(URL("vistaWordNet?id=" + request.vars.id + "&" + request.vars.texto))'
p99
sI462
S'    return locals()'
p100
ssg83
S'()'
p101
sg85
S'<module>'
p102
sa(dp103
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\globals.py'
p104
sg64
(dp105
S'self'
p106
S'undefined'
p107
sS'f'
S'<function DBGroup>'
p108
ssg70
I412
sg71
(dp109
I416
S"        self.generic_patterns = ['*']"
p110
sI407
S"        self.flash = ''            # used by the default view layout"
p111
sI408
S'        self.meta = Storage()      # used by web2py_ajax.html'
p112
sI409
S'        self.menu = []             # used by the default view layout'
p113
sI410
S'        self.files = []            # used by web2py_ajax.html'
p114
sI411
S'        self._vars = None'
p115
sI412
S'        self._caller = lambda f: f()'
p116
sI413
S'        self._view_environment = None'
p117
sI414
S'        self._custom_commit = None'
p118
sI415
S'        self._custom_rollback = None'
p119
ssg83
S'(f=<function DBGroup>)'
p120
sg85
S'<lambda>'
p121
sa(dp122
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers\\particular.py'
p123
sg64
(dp124
S'db.claves'
p125
S'<Table claves (id,grupo_id,usuario_id,nombre)>'
p126
sS'db.claves.id'
p127
S'<pydal.objects.Field object>'
p128
sS').select'
p129
g107
sS'builtinlen'
p130
S'<built-in function len>'
p131
sS'global db'
p132
S'<DAL uri="sqlite://storage.sqlite">'
p133
sS'aux'
p134
S'0'
ssg70
I331
sg71
(dp135
I326
S'def DBGroup():'
p136
sI327
S'    if(request.vars.grupo != None):'
p137
sI328
S'        if  isinstance(request.vars.grupo, list):'
p138
sI329
S'            for grupo in request.vars.grupo:'
p139
sI330
S"                if '-csm' in grupo:"
p140
sI331
S'                    aux = len(db(db.claves.id > 0).select())'
p141
sI332
S'                    db.grupo.insert(grup = "PGL-" + str(aux), termino_id = request.vars.termino, tipo=\'wordnet\', modo="1")'
p142
sI333
S'                    id_csm = db(db.grupo.grup == "PGL-" + str(aux)).select()[0][\'id\']'
p143
sI334
S'                    db.claves.insert(grupo_id=id_csm, usuario_id = auth.user.id, nombre=grupo)'
p144
sI335
S'                else:'
p145
ssg83
S'()'
p146
sg85
S'DBGroup'
p147
sa(dp148
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\objects.py'
p149
sg64
(dp150
S'self.query'
p151
S'<Query (claves.id > 0)>'
p152
sS'adapter.select'
p153
S'<bound method SQLiteAdapter.select of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p154
sS'fields'
p155
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p156
sS'adapter'
p157
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p158
sS'attributes'
p159
g45
sS'self'
p160
S'<Set (claves.id > 0)>'
p161
ssg70
I2026
sg71
(dp162
I2021
S"                                    attributes.get('join',None),"
p163
sI2022
S"                                    attributes.get('left',None),"
p164
sI2023
S"                                    attributes.get('orderby',None),"
p165
sI2024
S"                                    attributes.get('groupby',None))"
p166
sI2025
S'        fields = adapter.expand_all(fields, tablenames)'
p167
sI2026
S'        return adapter.select(self.query,fields,attributes)'
p168
sI2027
S''
sI2028
S'    def nested_select(self,*fields,**attributes):'
p169
sI2029
S'        return Expression(self.db,self._select(*fields,**attributes))'
p170
sI2030
S''
ssg83
S'(self=<Set (claves.id > 0)>, *fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], **attributes={})'
p171
sg85
S'select'
p172
sa(dp173
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\sqlite.py'
p174
sg64
(dp175
S'fields'
p176
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p177
sS'self'
p178
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p179
sS').select'
p180
S'<bound method SQLiteAdapter.select of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p181
sS'attributes'
p182
g45
sS'global SQLiteAdapter'
p183
S"<class 'pydal.adapters.sqlite.SQLiteAdapter'>"
p184
sS'query'
p185
S'<Query (claves.id > 0)>'
p186
sS'builtinsuper'
p187
S"<type 'super'>"
p188
ssg70
I125
sg71
(dp189
I128
S'SPATIALLIBS = {'
p190
sI129
S"    'Windows':'libspatialite',"
p191
sI120
S'        Note that the entire database, rather than one record, is locked'
p192
sI121
S'        (it will be locked eventually anyway by the following UPDATE).'
p193
sI122
S'        """'
p194
sI123
S"        if attributes.get('for_update', False) and not 'cache' in attributes:"
p195
sI124
S"            self.execute('BEGIN IMMEDIATE TRANSACTION;')"
p196
sI125
S'        return super(SQLiteAdapter, self).select(query, fields, attributes)'
p197
sI126
S''
sI127
S''
ssg83
S'(self=<pydal.adapters.sqlite.SQLiteAdapter object>, query=<Query (claves.id > 0)>, fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={})'
p198
sg85
g172
sa(dp199
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p200
sg64
(dp201
S'fields'
p202
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p203
sS'self'
p204
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p205
sS'attributes'
p206
g45
sS'self._select_aux'
p207
S'<bound method SQLiteAdapter._select_aux of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p208
sS'sql'
p209
S"'SELECT  claves.id, claves.grupo_id, claves.usuar... claves.nombre FROM claves WHERE (claves.id > 0);'"
p210
ssg70
I1239
sg71
(dp211
I1234
S'            return cache_model('
p212
sI1235
S'                key,'
p213
sI1236
S'                lambda self=self,args=args:self._select_aux(*args),'
p214
sI1237
S'                time_expire)'
p215
sI1238
S'        else:'
p216
sI1239
S'            return self._select_aux(sql,fields,attributes)'
p217
sI1240
S''
sI1241
S'    def _count(self, query, distinct=None):'
p218
sI1242
S'        tablenames = self.tables(query)'
p219
sI1243
S'        if query:'
p220
ssg83
S'(self=<pydal.adapters.sqlite.SQLiteAdapter object>, query=<Query (claves.id > 0)>, fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={})'
p221
sg85
g172
sa(dp222
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p223
sg64
(dp224
S'rows'
p225
S"[(1, 58, 10, u'organism-csm')]"
p226
sS'fields'
p227
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p228
sS'self'
p229
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p230
sS'cacheable'
p231
S'False'
p232
sS'self._colnames'
p233
S"['claves.id', 'claves.grupo_id', 'claves.usuario_id', 'claves.nombre']"
p234
sS'processor'
p235
S'<bound method SQLiteAdapter.parse of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p236
ssg70
I1220
sg71
(dp237
I1216
S"        limitby = args_get('limitby', None) or (0,)"
p238
sI1217
S'        rows = self.rowslice(rows,limitby[0],None)'
p239
sI1218
S"        processor = args_get('processor',self.parse)"
p240
sI1219
S"        cacheable = args_get('cacheable',False)"
p241
sI1220
S'        return processor(rows,fields,self._colnames,cacheable=cacheable)'
p242
sI1221
S''
sI1222
S'    def select(self, query, fields, attributes):'
p243
sI1223
S'        """'
p244
sI1224
S'        Always returns a Rows object, possibly empty.'
p245
sI1215
S'            rows = list(rows)'
p246
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, sql='SELECT  claves.id, claves.grupo_id, claves.usuar... claves.nombre FROM claves WHERE (claves.id > 0);', fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={})"
p247
sg85
S'_select_aux'
p248
sa(dp249
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p250
sg64
(dp251
S'blob_decode'
p252
S'True'
p253
sS'self'
p254
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p255
sS'ft'
p256
S"'reference_grupo'"
p257
sS'value'
p258
S'58'
p259
sS'self.parse_value'
p260
S'<bound method SQLiteAdapter.parse_value of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p261
ssg70
I1596
sg71
(dp262
I1600
S''
sI1591
S'                    colset = new_row.get(tablename, None)'
p263
sI1592
S'                    if colset is None:'
p264
sI1593
S'                        colset = new_row[tablename] = Row()'
p265
sI1594
S'                        if tablename not in virtualtables:'
p266
sI1595
S'                            virtualtables.append(tablename)'
p267
sI1596
S'                    value = self.parse_value(value,ft,blob_decode)'
p268
sI1597
S'                    if field.filter_out:'
p269
sI1598
S'                        value = field.filter_out(value)'
p270
sI1599
S'                    colset[fieldname] = value'
p271
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, rows=[(1, 58, 10, u'organism-csm')], fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], colnames=['claves.id', 'claves.grupo_id', 'claves.usuario_id', 'claves.nombre'], blob_decode=True, cacheable=False)"
p272
sg85
S'parse'
p273
sa(dp274
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p275
sg64
(dp276
S'field_type'
p277
S"'reference_grupo'"
p278
sS'self'
p279
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p280
sS'self.parsemap'
p281
S"{'bigint': <bound method SQLiteAdapter.parse_integer of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'blob': <bound method SQLiteAdapter.parse_blob of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'boolean': <bound method SQLiteAdapter.parse_boolean of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'date': <bound method SQLiteAdapter.parse_date of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'datetime': <bound method SQLiteAdapter.parse_datetime of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'decimal': <bound method SQLiteAdapter.parse_decimal of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'double': <bound method SQLiteAdapter.parse_double of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'float': <bound method SQLiteAdapter.parse_double of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'id': <bound method SQLiteAdapter.parse_id of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'integer': <bound method SQLiteAdapter.parse_integer of <pydal.adapters.sqlite.SQLiteAdapter object>>, ...}"
p282
sS'value'
p283
S'58'
p284
sS'key'
p285
S"'reference_grupo'"
p286
ssg70
I1450
sg71
(dp287
I1445
S'            return value'
p288
sI1446
S"        elif field_type == 'blob' and not blob_decode:"
p289
sI1447
S'            return value'
p290
sI1448
S'        else:'
p291
sI1449
S'            key = REGEX_TYPE.match(field_type).group(0)'
p292
sI1450
S'            return self.parsemap[key](value,field_type)'
p293
sI1451
S''
sI1452
S'    def parse_reference(self, value, field_type):'
p294
sI1453
S'        referee = field_type[10:].strip()'
p295
sI1454
S"        if not '.' in referee:"
p296
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, value=58, field_type='reference_grupo', blob_decode=True)"
p297
sg85
S'parse_value'
p298
sasS'pyver'
p299
S'Python 2.7.7: c:\\python27\\python.exe (prefix: c:\\python27)'
p300
sS'session'
p301
g57
(S's\xfc\x08\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>4d248551-4cde-4115-8156-372057f022c2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 20, 0, 10, 26, 76000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>antonio.nunez.311@gmail.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>Antonio</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>10L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Nu\xc3\xb1ez</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">10</td><td style="vertical-align:top;">:</td><td><div>Administrador</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div>'
tRp302
sS'etype'
p303
S"<type 'exceptions.KeyError'>"
p304
sS'date'
p305
S'Wed Apr 20 00:12:22 2016'
p306
sS'response'
p307
g57
(S's\x19\x1a\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x0C149FA0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_define_git</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a4fa414f-47e1-4ad7-9f3a-15332515af9a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Inicio</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/define_git/default/index</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^particular/\\w+\\.py$</div></td></tr><tr><td><div>^particular/DBGroup/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_define_git</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\define_git\\\\sessions\\\\1a5\\\\1c2\\\\127.0.0.1-a4fa414f-47e1-4ad7-9f3a-15332515af9a&#x27;, mode &#x27;rb+&#x27; at 0x0C164180&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\sessions\\127.0.0.1-a4fa414f-47e1-4ad7-9f3a-15332515af9a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>62bd8298baae47861752b30c8a4b0ddc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a4fa414f-47e1-4ad7-9f3a-15332515af9a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_define_git</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>define_git</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>Aplicaci\xc3\xb3n para relacionar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Define</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>particular/DBGroup.html</div></td></tr></table></div>'
tRp308
sS'locals'
p309
(dp310
S'blob_decode'
p311
g253
sS'self'
p312
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p313
sS'value'
p314
S'58'
p315
sS'key'
p316
S"'reference_grupo'"
p317
sS'field_type'
p318
S"'reference_grupo'"
p319
sssS'traceback'
p320
S'Traceback (most recent call last):\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers/particular.py", line 464, in <module>\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers/particular.py", line 331, in DBGroup\n    aux = len(db(db.claves.id > 0).select())\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 2026, in select\n    return adapter.select(self.query,fields,attributes)\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\sqlite.py", line 125, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1239, in select\n    return self._select_aux(sql,fields,attributes)\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1220, in _select_aux\n    return processor(rows,fields,self._colnames,cacheable=cacheable)\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1596, in parse\n    value = self.parse_value(value,ft,blob_decode)\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1450, in parse_value\n    return self.parsemap[key](value,field_type)\nKeyError: \'reference_grupo\'\n'
p321
s.