(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'm'"
p3
sS'layer'
p4
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers/general.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\nfrom __future__ import division\nfrom nltk.corpus import wordnet as wn #Importamos el lector del corpus de wordnet\nimport random\nimport operator\n\n#########################################################################\n## La funci\xc3\xb3n inicio crea la vista inicial que tendr\xc3\xa1 el usuario si no tiene\n## ninguna lista pendiente para etiquetar, crea dos variables en apoyo a esto\n## Vista relacionada: general/inicio.html\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: inicio\nDescripci\xc3\xb3n: Crea dos variables, una para mostrar el nombre del usuario y la otra para listar los terminos\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: default/inicio.html\n"""\n@auth.requires_login()\ndef inicio():\n    if (len(db((db.temporal.usuario_id == auth.user.id) & (db.temporal.modo == \'2\')).select()) == 0):\n        """usuario_nombre = auth.user.first_name\n        termino = db().select(db.termino.id, db.termino.ter)\n        if(request.vars.en == "1"):\n            response.flash = \'Lista de definiciones terminada\'"""\n        termino = db(db.termino.id > 1).select(db.termino.id)\n        cadena_termino = ""\n        for elemento in termino:\n            termino_id = elemento[\'id\']\n            cadena_termino = "termino=" + str(termino_id) + "&"\n        redirect(URL(\'relacion?\' + cadena_termino + \'rd=2\'))\n    else:\n        cadena_termino = ""\n        for elemento in db((db.temporal.usuario_id == auth.user.id) & (db.temporal.modo == \'2\')).select():\n            termino_id = db(db.definicion.id == elemento[\'definicion_id\']).select(db.definicion.termino_id)[0][\'termino_id\']\n            termino = "termino=" + str(termino_id) + "&"\n            if termino not in cadena_termino:\n                cadena_termino += termino\n        print cadena_termino\n        redirect(URL(\'relacion?\' + cadena_termino + \'rd=1\'))\n    return locals()\n\n#########################################################################\n## La funci\xc3\xb3n importar lee si se subi\xc3\xb3 un archivo, si es as\xc3\xad lo importa a la\n## base de datos.\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: importar\nDescripci\xc3\xb3n: Lee si hay un archivo, si es as\xc3\xad lo importa a la base de datos\nVersi\xc3\xb3n: 2.1\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: dict() - Un diccionario\nVista relacionada: general/importar.html\n"""\n@auth.requires_login()\ndef importar():\n    if request.vars.csvfile != None: \n        db.termino.insert(ter=request.vars.nombre)\n        idTermino = db(db.termino.ter == request.vars.nombre).select(db.termino.id)\n        table = db[request.vars.table]\n        file = request.vars.csvfile.file\n        table.import_from_csv_file(file)\n        db(db.definicion.termino_id==1).update(termino_id=idTermino[0][\'id\'])\n        users = db().select(db.auth_user.id)\n        db.grupo.insert(grup=\'No informativo\', termino_id=idTermino[0][\'id\'], tipo="Sistema", modo="1")\n        db.grupo.insert(grup=\'No informativo\', termino_id=idTermino[0][\'id\'], tipo="Sistema", modo="2")\n        redirect(URL(c = \'interfaz\', f = \'inicio\'))\n    else:\n        response.flash = \'Selecciona un archivo\'\n    return dict()\n#########################################################################\n## La funci\xc3\xb3n relacion crea la interfaz necesaria para que el etiquetador\n## pueda relacionar definiciones con grupos. Primero crea la lista si no\n## existe, posteriormente crea otras listas utiles para mostrar al etiquetador\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: relacion\nDescripci\xc3\xb3n: Crea la interfaz para la relacion\nVersi\xc3\xb3n: 2.8\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: general/relacion.html\n"""\n@auth.requires_login()\ndef relacion():\n    muestra = list()\n    definiciones_merge = list()\n    grupos_merge = list()\n    if(len(db((db.temporal.usuario_id == auth.user.id) & (db.temporal.modo == \'2\')).select()) == 0):\n        for elemento in request.vars.termino:\n            definiciones_merge.append(db(db.definicion.termino_id==elemento).select())\n        muestra = getMuestra(definiciones_merge)\n        response.flash = \'Se ha creado una lista aleatoria\'\n    else:\n        muestra = db((db.temporal.usuario_id == auth.user.id) & (db.temporal.modo == \'2\')).select()\n        if(request.vars.rd == "1"):\n            response.flash = \'Continua desde la \xc3\xbaltima sesi\xc3\xb3n\'\n    definicion = db(db.definicion.id==muestra[0][\'definicion_id\']).select()[0]\n    termino = db(db.termino.id==definicion[\'termino_id\']).select()[0]\n    historial = getHistorialKeywords(db((db.relacion.definicion_id==definicion[\'id\']) & (db.relacion.modo == "2")).select())\n    if(request.vars.error == \'0\'):\n        response.flash = \'Favor de llenar los campos\'\n    elif request.vars.error == \'1\':\n        response.flash = \'Las palabras clave no se encuentran en la definici\xc3\xb3n\'\n    total_usuarios = len(db(db.auth_user.id > 0).select())\n    terminos = ""\n    terminos_texto = ""\n    grupos_merge = list()\n    for elemento in request.vars.termino:\n        grupos_merge.append(db((db.grupo.termino_id == elemento) & (db.grupo.modo == \'2\')).select())\n        terminos += "termino=" + str(elemento) + "&"\n        terminos_texto += "texto=" + str(db(db.termino.id==elemento).select()[0][\'ter\']) + "&"\n    porcentaje = getPorcentajes(request.vars.termino)\n    terminos += "c=0"\n    terminos_texto += "c=0"\n    return locals()\n#########################################################################\n## La funci\xc3\xb3n getHistorialKeywords busca las palabras que se han utilizado\n## para un grupo y las cuenta, regresa un diccionario con las palabras clave\n## y la cantidad de veces que se repitieron, esto se ordena de mayor a menor\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: getHistorialKeywords\nDescripci\xc3\xb3n: Regresa un diccionario con la cantidad de veces que una palabra clave se repitio\nVersi\xc3\xb3n: 2.0\nAutor: Antonio Nu\xc3\xb1ez\nParametros: lista - La lista de registros\nRetorno: ordena - Diccionario ordenado de las palabras clave y su cantidad de usos\n"""   \ndef getHistorialKeywords(lista):\n    frase_clave = []\n    for registro in lista:\n        aux = registro[\'keywords\'].split(\',\')\n        for frase in aux:\n            if frase[0] == \' \':\n                frase = frase[1:]\n            frase_clave.append(frase)\n    conteo_frase = {}\n    for frase in frase_clave:\n        if frase in conteo_frase:\n            conteo_frase[frase] += 1\n        else:\n            conteo_frase[frase] = 1\n    ordenado = sorted(conteo_frase.items(), key=operator.itemgetter(1), reverse=True)\n    return ordenado\n\n#########################################################################\n## La funci\xc3\xb3n vistaWordNet crea la cadena de grupos que son sugerencia de wordnet\n## como en este caso tenemos m\xc3\xa1s de un t\xc3\xa9rmino, hacemos una iteracion para \n## tener todos los grupos de los terminos, usamos el id para identificarlos\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: vistaWordNet\nDescripci\xc3\xb3n: Crea la cadena de grupos sugerencia de wordnet\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: general/vistaWordNet\n"""\ndef vistaWordNet():\n    wordnet = list()\n    if  isinstance(request.vars.texto, list):\n        for elemento in request.vars.texto:\n            idTermino = db(db.termino.ter == elemento).select()[0][\'id\']\n            wordnet = crear_cadena(elemento, True, idTermino) #Crea la lista de wordnet\n    else:\n        idTermino = db(db.termino.ter == request.vars.texto).select()[0][\'id\']\n        wordnet = crear_cadena(request.vars.texto, True, idTermino) #Crea la lista de wordnet\n    return locals()\n\n#########################################################################\n## La funci\xc3\xb3n getMuestra crea una lista aleatoria y devuelve la consulta de\n## la misma\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: getMuestra\nDescripci\xc3\xb3n: Crea la lista aleatoria\nVersi\xc3\xb3n: 1.1\nAutor: Antonio Nu\xc3\xb1ez\nParametros: lista_definiciones - Las definiciones del t\xc3\xa9rmino seleccionado\nRetorno: La consulta de la muestra aleatoria que se acaba de crear\n"""   \ndef getMuestra(lista_definiciones):\n    i = 0\n    muestra = list()\n    max = 10\n    tam = 0\n    for lista in lista_definiciones:\n        tam += len(lista)\n    if(tam < 10):\n        max = tam\n    while (i < max):\n        termino = int(random.uniform(0, len(lista_definiciones)))\n        definicion = int(random.uniform(0, len(lista_definiciones[termino])))\n        if noEnLista(lista_definiciones[termino][definicion][\'id\'], muestra):\n            muestra.append(lista_definiciones[termino][definicion])\n            i = i + 1\n    registraLista(muestra)\n    return db((db.temporal.usuario_id == auth.user.id) & (db.temporal.modo == \'2\')).select()\n\n#########################################################################\n## La funci\xc3\xb3n registraLista crea el registro temporal en la base de datos\n## de la lista aleatoria que se creo\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: registraLista\nDescripci\xc3\xb3n: Registra la lista aleatoria en la base de datos\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nParametros: muestra - La lista de definiciones\n""" \ndef registraLista(muestra):\n    for definicion in muestra:\n        db.temporal.insert(usuario_id=auth.user.id, definicion_id=definicion[\'id\'], modo="2")\n\n#########################################################################\n## La funci\xc3\xb3n noEnLista coprueba que una definici\xc3\xb3n no se repita en la lista\n## aleatoria\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: noEnLista\nDescripci\xc3\xb3n: Valida que las definiciones no se repitan\nVersi\xc3\xb3n: 1.1\nAutor: Antonio Nu\xc3\xb1ez\nParametros: idDefinicion - La definici\xc3\xb3n que se quiere validar | muestra - La lista de definiciones\nRetorno: flag - Si se repite\n"""   \ndef noEnLista(idDefinicion, muestra):\n    flag = True\n    for definicion in muestra:\n        if definicion[\'id\'] == idDefinicion:\n            flag = False\n    return flag\n\n#########################################################################\n## La funci\xc3\xb3n wordnet_termino devuelve los synsets de un termino\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: wordnet_termino\nDescripci\xc3\xb3n: Regresa los synsets de un termino\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nParametros: termino - Lo que buscaremos en wordnet\nRetorno: Los synsets\n"""  \ndef wordnet_termino(termino):\n    return list(wn.synsets(str(termino)))\n\n#########################################################################\n## La funci\xc3\xb3n crear_cadena lee el t\xc3\xa9rmino y una bandera para consultar wordnet\n## y agregar a la cadena los grupos que este devuelve. Tiene opci\xc3\xb3n de recursividad\n## hasta un nivel m\xc3\xa1s\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: crear_cadena\nDescripci\xc3\xb3n: Regresa los grupos sugeridos en forma de cadena con formato html\nVersi\xc3\xb3n: 1.1\nAutor: Antonio Nu\xc3\xb1ez\nParametros: termino - Lo que buscaremos en wordnet | flag - si buscar\xc3\xa1 un nivel m\xc3\xa1s | idTermini - el termino de cada sugerencia | cadenas - el contenido que ya existe cuando es recursiva\nRetorno: cadenas - los grupos en formato html\n"""  \ndef crear_cadena(termino, flag, idTermino, cadenas=list()):\n    lista = wordnet_termino(termino)\n    if((len(db((db.grupo.grup == str(termino)) & (db.grupo.modo == "2")).select()) == 0)):\n        cadenas.append(\'<input type=\\\'checkbox\\\' name=\\\'grupo\\\' value=\\\'\'+ str(idTermino) + str(termino) + \'\\\' style=\\\'display:inline;\\\' />@\' + str(termino)) #Cada t\xc3\xa9rmino\n        for synset in lista:\n            if not busca_existencia(str(synset.definition()), cadenas): #Si el t\xc3\xa9rmino no existe en la cadena\n                lemmas = [str(lemma.name()) for lemma in synset.lemmas()]\n                cadenas.append(\'<br><input type=\\\'checkbox\\\' name=\\\'grupo\\\' value=\\\'test\\\' style=\\\'display:inline;\\\' onclick=\\\'nuevoValor(this), \' + str(idTermino) + \'\\\' /><strong>Lemmas</strong>: \' + str(lemmas) + \', <br><strong>Definition:</strong> (\' + synset.definition() + \'),<br> <strong>Examples: </strong> \' + str(synset.examples()).replace("u\'", "\'").replace("[]", "No available"))\n        cadenas.append(\'--------------------------------------------------\')\n    if flag: #Avanza un nivel m\xc3\xa1s de b\xc3\xbasqueda\n        for synset in lista:\n            lemmas = [str(lemma.name()) for lemma in synset.lemmas()]\n            for aux in lemmas: #Por cada lemma\n                if busca_existencia(str(aux), cadenas, \'@\'):\n                    print \'Ya existe\'\n                else:\n                    cadenas = crear_cadena(aux, False, idTermino, cadenas)\n    return cadenas\n\n#########################################################################\n## La funci\xc3\xb3n busca_existencia busca si alg\xc3\xban synset ya est\xc3\xa1 en la cadena\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: busca_existencia\nDescripci\xc3\xb3n: Busca si el synset ya existe\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nParametros: cadena - la cadena a buscar | cadenas - Donde buscaremos la cadena | identificador - alg\xc3\xban adorno que hayamos agregado\nRetorno: flag - Si existe en la cadena\n"""   \ndef busca_existencia(cadena, cadenas, identificador=\'\'):\n    flag = False\n    if identificador != \'\':\n        cadena = str(identificador) + str(cadena)\n    for aux in cadenas:\n        if cadena.lower() in aux.lower():\n            flag = True\n    return flag\n#########################################################################\n## La funci\xc3\xb3n crearGrupo se encarga de crear el grupo y de generar una string con\n## los grupos en la base de dados con el fin de hacer validaciones\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: crearGrupo\nDescripci\xc3\xb3n: Crea lo grupos personalizados\nVersi\xc3\xb3n: 1.6\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: general/crearGrupo\n"""  \n@auth.requires_login()\ndef crearGrupo():\n    user = auth.user.id\n    termino = request.vars.termino\n    grupos = db((db.grupo.termino_id == termino) & (db.grupo.modo == "2")).select()\n    cadena_grupos = ""\n    for grupo in grupos:\n        cadena_grupos += grupo[\'grup\'] + " "\n    if request.vars.nombre == \'0\':\n        response.flash = \'Ingresa un grupo\'\n    elif request.vars.nombre != \'\':\n        db.grupo.insert(grup = request.vars.nombre, termino_id = termino, tipo=\'Custom\', modo=\'2\')\n    return locals()\n\n#########################################################################\n## La funci\xc3\xb3n getHistorialGrupos se encarga de crear el historial de definiciones\n## usadas para un grupo o conjunto de grupos, lo mandamos a llamar con ajax\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: getHistorialGrupos\nDescripci\xc3\xb3n: Crea el historial de definiciones por grupo\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: respuestaHtml - la respuesta que ajax pondra en la vista\nVista relacionada: general/relacion\n"""\ndef getHistorialGrupos():\n    respuestaHtml = ""\n    user = request.vars.c\n    if request.vars.grupos != None:\n        if  isinstance(request.vars.grupos, list):\n            for grupo in request.vars.grupos:\n                historial = db((db.relacion.grupo_id == grupo) & (db.relacion.usuario == user) & (db.relacion.modo == "2")).select()\n                grupoNombre = db((db.grupo.id == grupo) & (db.grupo.modo == "2")).select()[0][\'grup\']\n                respuestaHtml += "<p><strong>Grupo:</strong> " + grupoNombre + "<br>"\n                contador = 10\n                aux = len(historial) - 1\n                if (len(historial) < 10):\n                    contador = len(historial)\n                while(contador > 0):\n                    respuestaHtml += "<strong>Definci\xc3\xb3n: </strong>" + db(db.definicion.id == historial[aux][\'definicion_id\']).select()[0][\'defi\'] + "<br>"\n                    contador -= 1\n                    aux -= 1\n                respuestaHtml += "</p>"\n        else:\n            historial = db((db.relacion.grupo_id == request.vars.grupos) & (db.relacion.usuario == user) & (db.relacion.modo == "2")).select()\n            grupoNombre = db((db.grupo.id == request.vars.grupos) & (db.grupo.modo == "2")).select()[0][\'grup\']\n            respuestaHtml += "<p><strong>Grupo:</strong> " + grupoNombre + "<br>"\n            contador = 10\n            aux = len(historial) - 1\n            if (len(historial) < 10):\n                contador = len(historial)\n            while(contador > 0):\n                respuestaHtml += "<strong>Definci\xc3\xb3n: </strong>" + db(db.definicion.id == historial[aux][\'definicion_id\']).select()[0][\'defi\'] + "<br>"\n                contador -= 1\n                aux -= 1\n            respuestaHtml += "</p>"\n    else:\n        respuestaHtml = "Selecciona un grupo"\n    return respuestaHtml\n\n#########################################################################\n## La funci\xc3\xb3n getPorcentajes suma la cantidad de veces que un grupo ha sido\n## utilizado por un usuario y lo regresa.\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: getPorcentajes\nDescripci\xc3\xb3n: Regresa un diccionario con la cantidad de veces que un grupo ha sido utilizado\nVersi\xc3\xb3n: 2.0\nAutor: Antonio Nu\xc3\xb1ez\nParametros: grupos - La lista de registros\nRetorno: porcentaje - Diccionario con el numero de usuarios que han usado un grupo\n"""  \ndef getPorcentajes(terminos):\n    porcentaje = dict()\n    grupos = db((db.relacion.modo == "2")).select()\n    for grupo in grupos:\n        if grupo[\'grupo_id\'] in porcentaje and grupo[\'usuario\'] not in porcentaje:\n            porcentaje[grupo[\'grupo_id\']] += 1\n        else:\n            porcentaje[grupo[\'grupo_id\']] = 1\n            porcentaje["u" + str(grupo[\'usuario\'])] = 1\n    return porcentaje\n\n#########################################################################\n## La funci\xc3\xb3n DBGroup se encarga de crear los grupos sugeridos\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: DBGroup\nDescripci\xc3\xb3n: Crea lo grupos sugeridos\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: general/vistaWordNet\n"""\ndef DBGroup():\n    if(request.vars.grupo != None):\n        if  isinstance(request.vars.grupo, list):\n            for grupo in request.vars.grupo:\n                numeros = sum(c.isdigit() for c in grupo)\n                if \'-csm\' in grupo:\n                    aux = len(db(db.claves.id > 0).select())\n                    db.grupo.insert(grup = "PGL-" + str(aux), termino_id = grupo[numeros-1], tipo=\'wordnet\', modo="2")\n                    id_csm = db(db.grupo.grup == "PGL-" + str(aux)).select()[0][\'id\']\n                    db.claves.insert(grupo_id=id_csm, usuario_id = auth.user.id, nombre=grupo[numeros:])\n                else:\n                    db.grupo.insert(grup = grupo[numeros:], termino_id = grupo[numeros-1], tipo=\'wordnet\', modo="2")\n        else:\n            numeros = sum(c.isdigit() for c in request.vars.grupo)\n            if \'-csm\' in request.vars.grupo:\n                aux = len(db(db.claves.id > 0).select())\n                db.grupo.insert(grup = "PGL-" + str(aux), termino_id = request.vars.grupo[numeros-1], tipo=\'wordnet\', modo="2")\n                id_csm = db(db.grupo.grup == "PGL-" + str(aux)).selet()[0][\'id\']\n                db.claves.insert(grupo_id=id_csm, usuario_id = auth.user.id, nombre=request.vars.grupo[numeros-1])\n            else:\n                db.grupo.insert(grup = request.vars.grupo[numeros:], termino_id = request.vars.grupo[numeros-1], tipo=\'wordnet\', modo="2")\n    validaOtro = False\n    if request.vars.otro == \'-1\':\n        validaOtro = True\n    else:\n        redirect(URL("crearGrupo?termino=" + request.vars.otro + "&nombre=0"))\n    return locals()\n\n#########################################################################\n## La funci\xc3\xb3n unir toma los datos mandados desde relacion y los introduce\n## en la base de datos\n#########################################################################\n"""\nNombre de la funci\xc3\xb3n: unir\nDescripci\xc3\xb3n: Crea la relacion en la base de datos\nVersi\xc3\xb3n: 1.0\nAutor: Antonio Nu\xc3\xb1ez\nRetorno: locals() - Las variables locales del programa, se usan en la vista\nVista relacionada: general/relacion\n"""\n@auth.requires_login()\ndef unir():\n    """\n    Crea la relaci\xc3\xb3n entre una definici\xc3\xb3n y un grupo, adem\xc3\xa1s verifica algunas validaciones previas\n    """\n    if(request.vars.keyword == \'\' or request.vars.grupo == None): #Validaci\xc3\xb3n de campos vacios\n        redirect(URL(\'relacion?error=0\'))\n    else:\n        if  isinstance(request.vars.grupo, list):\n            request.vars.grado = [x for x in request.vars.grado if x != \'\']\n            i = 0\n            while i < len(request.vars.grupo):\n                db.relacion.insert(keywords=request.vars.keyword, grado=request.vars.grado[i], grupo_id=request.vars.grupo[i], definicion_id=request.vars.definicion, usuario=auth.user.id, modo="2")\n                i = i + 1\n        else:\n            request.vars.grado = [x for x in request.vars.grado if x != \'\']\n            db.relacion.insert(keywords=request.vars.keyword, grado=request.vars.grado[0], grupo_id=request.vars.grupo, definicion_id=request.vars.definicion, usuario=auth.user.id, modo="2")\n        db((db.temporal.usuario_id==auth.user.id) & (db.temporal.definicion_id == request.vars.definicion) & (db.temporal.modo == "2")).delete()\n        if(len(db((db.temporal.usuario_id==auth.user.id) & (db.temporal.modo == "2")).select()) == 0):\n            redirect(URL(\'inicio?en=1\'))\n        else:\n            redirect(URL(\'relacion?\' + request.vars.auxiliar))\n    return locals()\n\n\ndef vistaTodos():\n    grupos = db((db.grupo.id > 0) & (db.grupo.grup != "No informativo") & (db.grupo.modo == 2)).select()\n    cadena = list()\n    for grupo in grupos:\n        termino_id = grupo[\'termino_id\']\n        termino = db(db.termino.id == termino_id).select()[0][\'ter\']\n        cadena.append(\'<input type=\\\'checkbox\\\' name=\\\'grupo\\\' value=\\\'\'+ str(termino_id) + str(grupo[\'grup\']) + \'\\\' />\' + str(grupo[\'grup\']))\n    textos = ""\n    if isinstance(request.vars.texto, list):\n        for texto in request.vars.texto:\n            textos += "texto=" + str(texto) + "&"\n    else:\n        textos = "texto=" + str(request.vars.texto) + "&"\n    textos += "c=0"\n    return locals()\n\ndef DBTodos():\n    if(request.vars.grupo != None):\n        if  isinstance(request.vars.grupo, list):\n            for grupo in request.vars.grupo:\n                numeros = sum(c.isdigit() for c in grupo)\n                db.grupo.insert(grup = grupo[numeros:], termino_id = grupo[numeros-1], tipo=\'mixto\', modo="2")\n        else:\n            numeros = sum(c.isdigit() for c in request.vars.grupo)\n            db.grupo.insert(grup = request.vars.grupo[numeros:], termino_id = request.vars.grupo[numeros-1], tipo=\'mixto\', modo="2")\n    validaOtro = False\n    if request.vars.otro == \'-1\':\n        validaOtro = True\n    else:\n        redirect(URL("vistaWordNet?id=" + request.vars.id + "&" + request.vars.texto))\n    return locals()\n\nresponse._vars=response._caller(DBGroup)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.ValueError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.ValueError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.ValueError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.ValueError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.ValueError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.ValueError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.ValueError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.ValueError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.ValueError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.ValueError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.ValueError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.ValueError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.ValueError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.ValueError object>"
p41
sS'args'
p42
S'("invalid literal for long() with base 10: \'m\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.ValueError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument value (of correct type).'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.ValueError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"invalid literal for long() with base 10: 'm'"
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S's\xa1`\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>define_git</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>general</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-90cb138c-041a-41e6-a758-a4d5e942128c<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_define_git</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-84a5211e-8659-4242-991c-a498e1bf469b<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-dc952084-92df-4dfa-9f17-aa5fceda9085<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>es-MX,es-ES;q=0.8,en-US;q=0.7,es-AR;q=0.5,es;q=0.3,en;q=0.2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-dc952084-92df-4dfa-9f17-aa5fceda9085; session_id_admin=127.0.0.1-90cb138c-041a-41e6-a758-a4d5e942128c; session_id_define_git=127.0.0.1-84a5211e-8659-4242-991c-a498e1bf469b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/define_git/general/vistaWordNet?id=7&amp;texto=Animal&amp;c=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 6.1; rv:43.0) Gecko/20100101 Firefox/43.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/define_git/general/DBGroup</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div>grupo=undefinedliving-csm&amp;termino=7&amp;otro=-1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>49811</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>Antonio-PC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\welcome\\\\&#x27;, &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\define_git\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x27a1238: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::c19a:2dcb:509a:1544%16&#x27;, &#x27;fe80::700f:f26a:3942:deab%17&#x27;, &#x27;192.168.50.1&#x27;, &#x27;192.168.0.101&#x27;, &#x27;fe80::d8a1:5c7c:68b4:6917%14&#x27;, &#x27;192.168.80.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Antonio-PC&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>es-MX,es-ES;q=0.8,en-US;q=0.7,es-AR;q=0.5,es;q=0.3,en;q=0.2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-dc952084-92df-4dfa-9f17-aa5fceda9085; session_id_admin=127.0.0.1-90cb138c-041a-41e6-a758-a4d5e942128c; session_id_define_git=127.0.0.1-84a5211e-8659-4242-991c-a498e1bf469b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/define_git/general/vistaWordNet?id=7&amp;texto=Animal&amp;c=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 6.1; rv:43.0) Gecko/20100101 Firefox/43.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::c19a:2dcb:509a:1544%16</div></td></tr><tr><td><div>Antonio-PC</div></td></tr><tr><td><div>fe80::700f:f26a:3942:deab%17</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>192.168.50.1</div></td></tr><tr><td><div>192.168.0.101</div></td></tr><tr><td><div>192.168.80.1</div></td></tr><tr><td><div>fe80::d8a1:5c7c:68b4:6917%14</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/define_git/general/DBGroup</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div>grupo=undefinedliving-csm&amp;termino=7&amp;otro=-1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>49811</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/define_git/general/DBGroup?grupo=undefinedliving-csm&amp;termino=7&amp;otro=-1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>Antonio-PC</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.11.2-stable+timestamp.2015.05.30.11.29.46</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x012CD0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x01F17FB8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x08598930&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x012CD0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x01F17FB8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x08598930&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>DBGroup</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\welcome\\\\&#x27;, &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\define_git\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x27a1238: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::c19a:2dcb:509a:1544%16&#x27;, &#x27;fe80::700f:f26a:3942:deab%17&#x27;, &#x27;192.168.50.1&#x27;, &#x27;192.168.0.101&#x27;, &#x27;fe80::d8a1:5c7c:68b4:6917%14&#x27;, &#x27;192.168.80.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Antonio-PC&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::c19a:2dcb:509a:1544%16</div></td></tr><tr><td><div>Antonio-PC</div></td></tr><tr><td><div>fe80::700f:f26a:3942:deab%17</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>192.168.50.1</div></td></tr><tr><td><div>192.168.0.101</div></td></tr><tr><td><div>192.168.80.1</div></td></tr><tr><td><div>fe80::d8a1:5c7c:68b4:6917%14</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.11.2-stable+timestamp.2015.05.30.11.29.46</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 22, 16, 56, 14, 363000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/define_git/general/DBGroup</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 22, 21, 56, 14, 363000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x0B5E60B0&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0B5EDC80, file "C:\\User...tions\\define_git\\controllers/general.py", line 3>'
p69
ssS'lnum'
p70
I227
sS'lines'
p71
(dp72
I224
S'            ccode = code'
p73
sI225
S'        else:'
p74
sI226
S'            ccode = compile2(code, layer)'
p75
sI227
S'        exec ccode in environment'
p76
sI228
S'    except HTTP:'
p77
sI229
S'        raise'
p78
sI230
S'    except RestrictedError:'
p79
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p80
sI222
S'    try:'
p81
sI223
S'        if isinstance(code, types.CodeType):'
p82
ssS'call'
p83
S"(code='# -*- coding: utf-8 -*-\\n\\nfrom __future__ import ...cals()\\n\\nresponse._vars=response._caller(DBGroup)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer=r'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers/general.py')"
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers\\general.py'
p88
sg64
(dp89
sg70
I506
sg71
(dp90
I495
S'                db.grupo.insert(grup = grupo[numeros:], termino_id = grupo[numeros-1], tipo=\'mixto\', modo="2")'
p91
sI496
S'        else:'
p92
sI497
S'            numeros = sum(c.isdigit() for c in request.vars.grupo)'
p93
sI498
S'            db.grupo.insert(grup = request.vars.grupo[numeros:], termino_id = request.vars.grupo[numeros-1], tipo=\'mixto\', modo="2")'
p94
sI499
S'    validaOtro = False'
p95
sI500
S"    if request.vars.otro == '-1':"
p96
sI501
S'        validaOtro = True'
p97
sI502
S'    else:'
p98
sI503
S'        redirect(URL("vistaWordNet?id=" + request.vars.id + "&" + request.vars.texto))'
p99
sI504
S'    return locals()'
p100
ssg83
S'()'
p101
sg85
S'<module>'
p102
sa(dp103
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\globals.py'
p104
sg64
(dp105
S'self'
p106
S'undefined'
p107
sS'f'
S'<function DBGroup>'
p108
ssg70
I412
sg71
(dp109
I416
S"        self.generic_patterns = ['*']"
p110
sI407
S"        self.flash = ''            # used by the default view layout"
p111
sI408
S'        self.meta = Storage()      # used by web2py_ajax.html'
p112
sI409
S'        self.menu = []             # used by the default view layout'
p113
sI410
S'        self.files = []            # used by web2py_ajax.html'
p114
sI411
S'        self._vars = None'
p115
sI412
S'        self._caller = lambda f: f()'
p116
sI413
S'        self._view_environment = None'
p117
sI414
S'        self._custom_commit = None'
p118
sI415
S'        self._custom_rollback = None'
p119
ssg83
S'(f=<function DBGroup>)'
p120
sg85
S'<lambda>'
p121
sa(dp122
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers\\general.py'
p123
sg64
(dp124
S'tipo'
p125
g107
sS'db.grupo.insert'
p126
S'<bound method Table.insert of <Table grupo (id,grup,termino_id,tipo,modo)>>'
p127
sS'builtinstr'
p128
S"<type 'str'>"
p129
sS'numeros'
p130
S'0'
sS'termino_id'
p131
g107
sS'grup'
p132
g107
sS'request.vars'
p133
S"<Storage {'otro': '-1', 'grupo': 'undefinedliving-csm', 'termino': '7'}>"
p134
sS'global db'
p135
S'<DAL uri="sqlite://storage.sqlite">'
p136
sS'aux'
p137
S'2'
sS'global request'
p138
S"<Storage {'_vars': <Storage {'otro': '-1', 'grup...io\\\\nuevo2\\\\web2py\\\\applications\\\\define_git\\\\'}>"
p139
sS'db.grupo'
p140
S'<Table grupo (id,grup,termino_id,tipo,modo)>'
p141
sS'request.vars.grupo'
p142
S"'undefinedliving-csm'"
p143
sS'modo'
p144
g107
ssg70
I425
sg71
(dp145
I420
S'                    db.grupo.insert(grup = grupo[numeros:], termino_id = grupo[numeros-1], tipo=\'wordnet\', modo="2")'
p146
sI421
S'        else:'
p147
sI422
S'            numeros = sum(c.isdigit() for c in request.vars.grupo)'
p148
sI423
S"            if '-csm' in request.vars.grupo:"
p149
sI424
S'                aux = len(db(db.claves.id > 0).select())'
p150
sI425
S'                db.grupo.insert(grup = "PGL-" + str(aux), termino_id = request.vars.grupo[numeros-1], tipo=\'wordnet\', modo="2")'
p151
sI426
S'                id_csm = db(db.grupo.grup == "PGL-" + str(aux)).selet()[0][\'id\']'
p152
sI427
S'                db.claves.insert(grupo_id=id_csm, usuario_id = auth.user.id, nombre=request.vars.grupo[numeros-1])'
p153
sI428
S'            else:'
p154
sI429
S'                db.grupo.insert(grup = request.vars.grupo[numeros:], termino_id = request.vars.grupo[numeros-1], tipo=\'wordnet\', modo="2")'
p155
ssg83
S'()'
p156
sg85
S'DBGroup'
p157
sa(dp158
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\objects.py'
p159
sg64
(dp160
S'self._listify'
p161
S'<bound method Table._listify of <Table grupo (id,grup,termino_id,tipo,modo)>>'
p162
sS'fields'
p163
S"{'grup': 'PGL-2', 'modo': '2', 'termino_id': 'm', 'tipo': 'wordnet'}"
p164
sS'self'
p165
S'<Table grupo (id,grup,termino_id,tipo,modo)>'
p166
sS'ret'
p167
g107
sS'self._db._adapter'
p168
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p169
sS'self._db._adapter.insert'
p170
S'<bound method SQLiteAdapter.insert of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p171
sS'self._db'
p172
S'<DAL uri="sqlite://storage.sqlite">'
p173
ssg70
I737
sg71
(dp174
I736
S'        if any(f(fields) for f in self._before_insert): return 0'
p175
sI737
S'        ret =  self._db._adapter.insert(self, self._listify(fields))'
p176
sI738
S'        if ret and self._after_insert:'
p177
sI739
S'            fields = Row(fields)'
p178
sI740
S'            [f(fields,ret) for f in self._after_insert]'
p179
sI741
S'        return ret'
p180
sI732
S''
sI733
S'    def insert(self, **fields):'
p181
sI734
S'        fields = self._defaults(fields)'
p182
sI735
S'        self._attempt_upload(fields)'
p183
ssg83
S"(self=<Table grupo (id,grup,termino_id,tipo,modo)>, **fields={'grup': 'PGL-2', 'modo': '2', 'termino_id': 'm', 'tipo': 'wordnet'})"
p184
sg85
S'insert'
p185
sa(dp186
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p187
sg64
(dp188
S'self._insert'
p189
S'<bound method SQLiteAdapter._insert of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p190
sS'query'
p191
g107
sS'self'
p192
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p193
sS'fields'
p194
S"[(<pydal.objects.Field object>, 'm'), (<pydal.objects.Field object>, 'PGL-2'), (<pydal.objects.Field object>, 'wordnet'), (<pydal.objects.Field object>, '2')]"
p195
sS'table'
p196
S'<Table grupo (id,grup,termino_id,tipo,modo)>'
p197
ssg70
I720
sg71
(dp198
I715
S''
sI716
S'    def _insert_empty(self, table):'
p199
sI717
S"        return 'INSERT INTO %s DEFAULT VALUES;' % (table.sqlsafe)"
p200
sI718
S''
sI719
S'    def insert(self, table, fields):'
p201
sI720
S'        query = self._insert(table,fields)'
p202
sI721
S'        try:'
p203
sI722
S'            self.execute(query)'
p204
sI723
S'        except Exception:'
p205
sI724
S'            e = sys.exc_info()[1]'
p206
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, table=<Table grupo (id,grup,termino_id,tipo,modo)>, fields=[(<pydal.objects.Field object>, 'm'), (<pydal.objects.Field object>, 'PGL-2'), (<pydal.objects.Field object>, 'wordnet'), (<pydal.objects.Field object>, '2')])"
p207
sg85
g185
sa(dp208
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p209
sg64
(dp210
S'f'
g107
sS'fields'
p211
S"[(<pydal.objects.Field object>, 'm'), (<pydal.objects.Field object>, 'PGL-2'), (<pydal.objects.Field object>, 'wordnet'), (<pydal.objects.Field object>, '2')]"
p212
sS'self'
p213
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p214
sS'values'
p215
g107
sS'v'
g107
sS'self.expand'
p216
S'<bound method SQLiteAdapter.expand of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p217
ssg70
I711
sg71
(dp218
I706
S''
sI707
S'    def _insert(self, table, fields):'
p219
sI708
S'        table_rname = table.sqlsafe'
p220
sI709
S'        if fields:'
p221
sI710
S"            keys = ','.join(f.sqlsafe_name for f, v in fields)"
p222
sI711
S"            values = ','.join(self.expand(v, f.type) for f, v in fields)"
p223
sI712
S"            return 'INSERT INTO %s(%s) VALUES (%s);' % (table_rname, keys, values)"
p224
sI713
S'        else:'
p225
sI714
S'            return self._insert_empty(table)'
p226
sI715
S''
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, table=<Table grupo (id,grup,termino_id,tipo,modo)>, fields=[(<pydal.objects.Field object>, 'm'), (<pydal.objects.Field object>, 'PGL-2'), (<pydal.objects.Field object>, 'wordnet'), (<pydal.objects.Field object>, '2')])"
p227
sg85
S'_insert'
p228
sa(dp229
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p230
sg64
(dp231
S'f'
S'<pydal.objects.Field object>'
p232
sS'fields'
p233
g107
sS'self'
p234
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p235
sS'f.type'
p236
S"'reference termino'"
p237
sS'values'
p238
g107
sS'v'
S"'m'"
p239
sS'self.expand'
p240
S'<bound method SQLiteAdapter.expand of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p241
ssg70
I711
sg71
(dp242
I706
S''
sI707
S'    def _insert(self, table, fields):'
p243
sI708
S'        table_rname = table.sqlsafe'
p244
sI709
S'        if fields:'
p245
sI710
S"            keys = ','.join(f.sqlsafe_name for f, v in fields)"
p246
sI711
S"            values = ','.join(self.expand(v, f.type) for f, v in fields)"
p247
sI712
S"            return 'INSERT INTO %s(%s) VALUES (%s);' % (table_rname, keys, values)"
p248
sI713
S'        else:'
p249
sI714
S'            return self._insert_empty(table)'
p250
sI715
S''
ssg83
S"((f=<pydal.objects.Field object>, v='m'))"
p251
sg85
S'<genexpr>'
p252
sa(dp253
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p254
sg64
(dp255
S'builtinstr'
p256
S"<type 'str'>"
p257
sS'field_type'
p258
S"'reference termino'"
p259
sS'self'
p260
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p261
sS'expression'
p262
S"'m'"
p263
sS'self.represent'
p264
S'<bound method SQLiteAdapter.represent of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p265
ssg70
I920
sg71
(dp266
I915
S"                out = '(%s)' % op"
p267
sI916
S'            else:'
p268
sI917
S'                out = op()'
p269
sI918
S'            return out'
p270
sI919
S'        elif field_type:'
p271
sI920
S'            return str(self.represent(expression,field_type))'
p272
sI921
S'        elif isinstance(expression,(list,tuple)):'
p273
sI922
S"            return ','.join(self.represent(item,field_type) \\"
p274
sI923
S'                                for item in expression)'
p275
sI924
S'        elif isinstance(expression, bool):'
p276
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, expression='m', field_type='reference termino', colnames=False)"
p277
sg85
S'expand'
p278
sa(dp279
g62
S'C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p280
sg64
(dp281
S'builtinstr'
p282
S"<type 'str'>"
p283
sS'builtinlong'
p284
S"<type 'long'>"
p285
sS'obj'
p286
S"'m'"
p287
ssg70
I1371
sg71
(dp288
I1366
S'            return str(obj)'
p289
sI1367
S"        elif field_is_type('reference'): # reference"
p290
sI1368
S'            # check for tablename first'
p291
sI1369
S'            referenced = fieldtype[9:].strip()'
p292
sI1370
S'            if referenced in self.db.tables:'
p293
sI1371
S'                return str(long(obj))'
p294
sI1372
S"            p = referenced.partition('.')"
p295
sI1373
S"            if p[2] != '':"
p296
sI1374
S'                try:'
p297
sI1375
S'                    ftype = self.db[p[0]][p[2]].type'
p298
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, obj='m', fieldtype='reference termino')"
p299
sg85
S'represent'
p300
sasS'pyver'
p301
S'Python 2.7.7: c:\\python27\\python.exe (prefix: c:\\python27)'
p302
sS'session'
p303
g57
(S's\xfe\x08\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>e23a4755-a4fb-4597-a447-14834a9a74e4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2016, 4, 22, 16, 55, 21, 619000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>antonio.nunez.311@gmail.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>Antonio</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>10L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Nu\xc3\xb1ez</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">10</td><td style="vertical-align:top;">:</td><td><div>Administrador</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div>'
tRp304
sS'etype'
p305
S"<type 'exceptions.ValueError'>"
p306
sS'date'
p307
S'Fri Apr 22 16:56:14 2016'
p308
sS'response'
p309
g57
(S's\x10\x1a\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x0ABE7B40&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_define_git</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-84a5211e-8659-4242-991c-a498e1bf469b<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Inicio</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/define_git/default/index</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^general/\\w+\\.py$</div></td></tr><tr><td><div>^general/DBGroup/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_define_git</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;C:\\\\Users\\\\Antonio\\\\Documents\\\\Servicio\\\\nuevo2\\\\web2py\\\\applications\\\\define_git\\\\sessions\\\\07b\\\\0f2\\\\127.0.0.1-84a5211e-8659-4242-991c-a498e1bf469b&#x27;, mode &#x27;rb+&#x27; at 0x07CA6F98&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\sessions\\127.0.0.1-84a5211e-8659-4242-991c-a498e1bf469b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>842986aba0980cde92eab08493760bee</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-84a5211e-8659-4242-991c-a498e1bf469b</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_define_git</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>define_git</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div>Aplicaci\xc3\xb3n para relacionar</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Define</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>general/DBGroup.html</div></td></tr></table></div>'
tRp310
sS'locals'
p311
(dp312
S'referenced'
p313
S"'termino'"
p314
sS'obj'
p315
S"'m'"
p316
sS'self'
p317
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p318
sS'r'
S'None'
p319
sS'fieldtype'
p320
S"'reference termino'"
p321
sS'field_is_type'
p322
S'<built-in method startswith of str object>'
p323
sssS'traceback'
p324
S'Traceback (most recent call last):\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers/general.py", line 506, in <module>\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\applications\\define_git\\controllers/general.py", line 425, in DBGroup\n    db.grupo.insert(grup = "PGL-" + str(aux), termino_id = request.vars.grupo[numeros-1], tipo=\'wordnet\', modo="2")\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 737, in insert\n    ret =  self._db._adapter.insert(self, self._listify(fields))\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 720, in insert\n    query = self._insert(table,fields)\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 711, in _insert\n    values = \',\'.join(self.expand(v, f.type) for f, v in fields)\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 711, in <genexpr>\n    values = \',\'.join(self.expand(v, f.type) for f, v in fields)\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 920, in expand\n    return str(self.represent(expression,field_type))\n  File "C:\\Users\\Antonio\\Documents\\Servicio\\nuevo2\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1371, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'m\'\n'
p325
s.